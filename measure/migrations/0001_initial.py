# Generated by Django 4.1.3 on 2024-02-19 00:54

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="GHPUser",
            fields=[
                (
                    "user_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("current_student", models.BooleanField(default=False)),
                ("current_ghp_staff", models.BooleanField(default=False)),
                ("current_faculty", models.BooleanField(default=False)),
                ("last_measure_date", models.DateField(null=True)),
                ("consent", models.BooleanField(default=False)),
                ("consent_date", models.DateField(null=True)),
                (
                    "current_location",
                    models.CharField(
                        choices=[
                            ("Greenwich", "Greenwich"),
                            ("Chelsea", "Chelsea"),
                            ("Both", "Both"),
                        ],
                        default="Greenwich",
                        max_length=10,
                    ),
                ),
            ],
            options={
                "db_table": "ghp_user",
                "managed": True,
            },
            bases=("auth.user",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="PlaceholderAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=200, unique=True)),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("last_update", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "placeholderaccount",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "ghp_user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="measure.ghpuser",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("last_update", models.DateTimeField()),
            ],
            options={
                "db_table": "account",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Piece",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ghp_user_piece_id", models.IntegerField(default=1)),
                ("date", models.DateField(blank=True, null=True)),
                ("length", models.DecimalField(decimal_places=1, max_digits=5)),
                ("width", models.DecimalField(decimal_places=1, max_digits=5)),
                ("height", models.DecimalField(decimal_places=1, max_digits=5)),
                (
                    "handles",
                    models.DecimalField(decimal_places=0, default=0, max_digits=2),
                ),
                (
                    "size",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "firing_price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "glazing_price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "paid_price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("course_number", models.CharField(blank=True, max_length=4)),
                (
                    "bisque_temp",
                    models.CharField(
                        choices=[("06", "Δ 06 (Cone 06)"), ("None", "None")],
                        default="06",
                        max_length=4,
                    ),
                ),
                (
                    "glaze_temp",
                    models.CharField(
                        choices=[
                            ("10", "Δ 10 (Cone 10)"),
                            ("6", "Δ 6 (Cone 6)"),
                            ("Lust", "Luster"),
                            ("04", "Δ 04 (Cone 04)"),
                            ("None", "None"),
                        ],
                        default="10",
                        max_length=4,
                    ),
                ),
                ("note", models.CharField(blank=True, max_length=1000)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="images/"),
                ),
                (
                    "piece_location",
                    models.CharField(
                        choices=[("Greenwich", "Greenwich"), ("Chelsea", "Chelsea")],
                        default="Greenwich",
                        max_length=10,
                    ),
                ),
                (
                    "ghp_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="measure.ghpuser",
                    ),
                ),
            ],
            options={
                "db_table": "piece",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Ledger",
            fields=[
                ("transaction_id", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateTimeField()),
                ("ghp_user_transaction_number", models.IntegerField(default=None)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("auto_bisque_fee", "AUTO: Bisque Firing Fee"),
                            ("auto_glaze_fee", "AUTO: Glaze Firing Fee"),
                            (
                                "auto_refund_bisque_fee",
                                "AUTO: Refund Bisque Firing Fee",
                            ),
                            ("auto_refund_glaze_fee", "AUTO: Refund Glaze Firing Fee"),
                            (
                                "auto_user_add_firing_credit",
                                "AUTO: User Add Firing Credit",
                            ),
                            ("auto_gh_add_firing_credit", "AUTO: GH Add Firing Credit"),
                            ("auto_gh_add_misc_credit", "AUTO: GH Add Misc Credit"),
                            ("auto_gh_add_misc_charge", "AUTO: GH Add Misc Charge"),
                            ("manual_gh_add_misc_credit", "MANUAL: GH Add Misc Credit"),
                            ("manual_gh_add_misc_charge", "MANUAL: GH Add Misc Charge"),
                        ],
                        max_length=100,
                    ),
                ),
                ("note", models.CharField(blank=True, max_length=1000)),
                (
                    "stripe_session_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "ghp_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="measure.ghpuser",
                    ),
                ),
                (
                    "piece",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="measure.piece",
                    ),
                ),
            ],
            options={
                "db_table": "ledger",
                "managed": True,
            },
        ),
        migrations.AddConstraint(
            model_name="piece",
            constraint=models.CheckConstraint(
                check=models.Q(("length__gte", 0.5)),
                name="length_gte_0.5",
                violation_error_message="Length must be at least 0.5 inches",
            ),
        ),
        migrations.AddConstraint(
            model_name="piece",
            constraint=models.CheckConstraint(
                check=models.Q(("width__gte", 0.5)),
                name="width_gte_0.5",
                violation_error_message="Width must be at least 0.5 inches",
            ),
        ),
        migrations.AddConstraint(
            model_name="piece",
            constraint=models.CheckConstraint(
                check=models.Q(("height__gte", 3.0)),
                name="height_gte_3.0",
                violation_error_message="Height must be at least 3 inches",
            ),
        ),
        migrations.AddConstraint(
            model_name="piece",
            constraint=models.CheckConstraint(
                check=models.Q(("length__lte", 21.0), ("width__lte", 21.0)),
                name="length_and_width_lte_21.0",
                violation_error_message="Length amd width must be less than or equal to 21 inches",
            ),
        ),
        migrations.AddConstraint(
            model_name="piece",
            constraint=models.CheckConstraint(
                check=models.Q(("height__lte", 22.0)),
                name="height_lte_22.0",
                violation_error_message="Height must be less than or equal to 22 inches",
            ),
        ),
    ]
